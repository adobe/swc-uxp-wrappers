/*
Copyright 2024 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* write uxp style overrides */

#button {
    height: var(--mod-picker-block-size, var(--spectrum-picker-block-size));
    max-width: 100%;
    min-width: calc(
        var(--spectrum-picker-minimum-width-multiplier) *
            var(--mod-picker-block-size, var(--spectrum-picker-block-size))
    );
    padding-top: 0;
    padding-bottom: 0;
    padding-right: var(
        --mod-picker-spacing-edge-to-disclosure-icon,
        var(--spectrum-picker-spacing-edge-to-disclosure-icon)
    );
    padding-left: var(
        --mod-picker-spacing-edge-to-text,
        var(--spectrum-picker-spacing-edge-to-text)
    );
    appearance: none;
}

#button:after {
    height: calc(
        100% +
            var(
                --mod-picker-focus-indicator-gap,
                var(--spectrum-picker-focus-indicator-gap)
            ) * 4 +
            var(--mod-picker-border-width, var(--spectrum-picker-border-width)) *
            2
    );
    width: calc(
        100% +
            var(
                --mod-picker-focus-indicator-gap,
                var(--spectrum-picker-focus-indicator-gap)
            ) * 4 +
            var(--mod-picker-border-width, var(--spectrum-picker-border-width)) *
            2
    );
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin-top: calc(
        (
                var(
                        --mod-picker-focus-indicator-gap,
                        var(--spectrum-picker-focus-indicator-gap)
                    ) +
                    var(
                        --mod-picker-focus-indicator-thickness,
                        var(--spectrum-picker-focus-indicator-thickness)
                    ) +
                    var(
                        --mod-picker-border-width,
                        var(--spectrum-picker-border-width)
                    )
            ) * -1
    );
    margin-left: calc(
        (
                var(
                        --mod-picker-focus-indicator-gap,
                        var(--spectrum-picker-focus-indicator-gap)
                    ) +
                    var(
                        --mod-picker-focus-indicator-thickness,
                        var(--spectrum-picker-focus-indicator-thickness)
                    ) +
                    var(
                        --mod-picker-border-width,
                        var(--spectrum-picker-border-width)
                    )
            ) * -1
    );
}

#label ~ .picker {
    margin-left: var(
        --mod-picker-spacing-text-to-icon,
        var(--spectrum-picker-spacing-text-to-icon)
    );
}

.picker {
    margin-top: var(
        --mod-picker-spacing-top-to-disclosure-icon,
        var(--spectrum-picker-spacing-top-to-disclosure-icon)
    );
    margin-bottom: var(
        --mod-picker-spacing-top-to-disclosure-icon,
        var(--spectrum-picker-spacing-top-to-disclosure-icon)
    );
    margin-left: var(
        --mod-picker-spacing-icon-to-disclosure-icon,
        var(--spectrum-picker-spacing-icon-to-disclosure-icon)
    );
}

:host([quiet]) #button {
    margin-top: calc(
        var(
                --mod-picker-spacing-label-to-picker-quiet,
                var(--spectrum-picker-spacing-label-to-picker-quiet)
            ) + 1px
    );
    padding-left: var(
        --mod-picker-spacing-edge-to-text-quiet,
        var(--spectrum-picker-spacing-edge-to-text-quiet)
    );
    padding-right: var(
        --mod-picker-spacing-edge-to-text-quiet,
        var(--spectrum-picker-spacing-edge-to-text-quiet)
    );
}

:host([quiet]) #button {
    width: auto;
    min-width: 0;
}

#menu ::slotted(sp-menu-item) {
    padding-left: var(
        --mod-menu-item-selectable-edge-to-text-not-selected,
        var(--spectrum-menu-item-selectable-edge-to-text-not-selected)
    );
}

#menu ::slotted(sp-menu-item[selected]) {
    padding-left: var(
        --mod-menu-item-label-inline-edge-to-content,
        var(--spectrum-menu-item-label-inline-edge-to-content)
    );
}

#button .spectrum-ProgressCircle,
.validation-icon {
    margin-left: var(
        --mod-picker-spacing-text-to-alert-icon-inline-start,
        var(--spectrum-picker-spacing-text-to-alert-icon-inline-start)
    );
}

.icon {
    margin-right: var(
        --mod-picker-spacing-text-to-icon,
        var(--spectrum-picker-spacing-text-to-icon)
    );
}

.visually-hidden {
    position: relative;
}

#button:disabled,
:host([disabled]) #button {
    pointer-events: none;
}

#button.focus-visible:after,
:host([focused]) #button:after {
    border-color: transparent;
}

#button.focus-visible:after {
    border-color: var(
        --highcontrast-picker-focus-indicator-color,
        var(
            --mod-picker-focus-indicator-color,
            var(--spectrum-picker-focus-indicator-color)
        )
    ) !important;
}

:host([quiet]) #button:focus-visible:after,
:host([quiet][focused]) #button:after {
    box-shadow: none;
}

:host([quiet].focus-visible) {
    border-bottom: var(--spectrum-picker-focus-indicator-thickness) solid
        var(--spectrum-picker-focus-indicator-color);
}

.visually-hidden {
    visibility: hidden;
}

#button:disabled #label.placeholder,
:host([disabled]) #button #label.placeholder {
    color: var(--spectrum-picker-font-color-disabled) !important;
}
